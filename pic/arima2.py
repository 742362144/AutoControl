import matplotlib.pyplot as plt
import numpy as np

plt.style.use(['science', 'high-contrast', 'no-latex'])

plt.rcParams['font.sans-serif'] = ['SimHei']  # 设置字体以便支持中文

# x = [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216]
# y = [754326, 816252, 702338, 713058, 707751, 681619, 700898, 690466, 702017, 825832, 822247, 874179, 727937, 752400,
#      760544, 816799, 927918, 1013490, 1169714, 1732919, 2893101, 6046031, 8467145, 12473026, 19080712]

# plt.plot(range(1, len(x)+1), y, label="net")
#
# plt.xticks(range(1, len(x)+1), x_label, rotation='vertical')
#
# plt.legend(loc='best', fontsize=10)
# # 防止坐标轴重叠
# # plt.tight_layout()
# plt.show()


# tick_label = ['compute', 'storage']

plt.subplots(figsize=(8, 3), dpi=400)
plt.subplot(121)

x_label1 = ['1b', '2b', '4b', '8b', '16b', '32b', '64b', '128b', '256b', '512b', '1kb', '2kb', '4kb', '8kb', '16kb',
            '32kb', '64kb', '128kb', '256kb', '512kb', '1mb', '2mb', '4mb', '8mb', '16mb']
s = [2.813033862221599, 2.597264119232327, 2.81738599701473, 2.8174526904933916, 2.502716669962227, 2.59281084364246, 2.4412694230533787, 2.381706876855125, 2.9725465809514438, 2.8620944303121303, 2.503813074807618, 2.982640468806887, 2.878949082169025, 2.513703383938911, 2.7052870139075442, 2.465457965505079, 2.642395526369096, 2.802653045976313, 2.3461156646553003, 2.823909283842168, 2.789823248622103, 2.921620825797759, 2.7739086163870255, 2.720776811733197, 2.7923761549442307]
c1 = [0.6220680490750984, 0.4927870700556403, 0.4503661587696597, 0.680763785543907, 0.6007276052994619, 0.5407290957820022, 0.5411874680003074, 0.4018643984473619, 0.47174816311122697, 0.7739266268519618, 0.7884179039896977, 0.6171453791886892, 0.7825252901196039, 0.6974213143038497, 0.7536077449755805, 0.4142136716750792, 0.7022647199962575, 0.4001843847812718, 0.4589963647270375, 0.6733163323264055, 0.5355392336953608, 0.6971267445503782, 0.7182699703448933, 0.7966736622260557, 0.6097183564652383]
c2 = [0.28641027379403977, 0.6199254414818065, 0.5486170428327346, 0.310839057225795, 0.6941161074131159, 0.6449491101312417, 0.7244163718502526, 0.9831336213798366, 0.2925130983214315, 0.06905035632442452, 0.4523265934082489, 0.17801889980798646, 0.06607399630325045, 0.6958828351918097, 0.45200519634002206, 0.8207446034739423, 0.42818713267943287, 0.7081314973586912, 0.9171913377531147, 0.33125193105552386, 0.5303560960150817, 0.15352602128108594, 0.38119392219000187, 0.28093058427898426, 0.30179725122389817]


c1 = np.array(c1)
c2 = np.array(c2)
s = np.array(s)

plt.plot(range(1, len(c1) + 1), c1, label="compute1", color='b')
plt.plot(range(1, len(c2) + 1), c2, label="compute2", color='b')
plt.plot(range(1, len(c2) + 1), np.repeat(1, len(c2)), label="compute cpu limit", color='r', linewidth=1, linestyle="--")
plt.plot(range(1, len(c2) + 1), s, label="storage", color='g')
plt.plot(range(1, len(s) + 1), np.repeat(2, len(c2)), label="storage cpu limit", color='r', linewidth=1, linestyle="--")

text_font = {'size': '10', 'weight': 'bold', 'color': 'black'}
plt.text(6, -0.7, "Resource reallocation", fontdict=text_font, zorder=4)

plt.legend(loc='best', fontsize=8)

plt.subplot(122)

s = [98.32589114736759, 98.15924449658192, 96.53614904900954, 98.81989254285153, 98.01349443009838, 96.85946571503978, 97.68238302562736, 96.67311976747767, 98.5447868812582, 97.23297993682594, 98.84709780677724, 95.52547322907328, 95.75317029448209, 97.3946365996632, 98.98380708244898, 97.84955923719124, 98.98194439265224, 95.56224730146656, 99.12826045455368, 98.41823717427462, 97.27006387104775, 98.12297222187816, 95.51348998631083, 97.79351350994854, 98.8752857101779, 96.287997280678, 99.50624332844829, 98.71317631209168, 99.0905920255691, 99.12574105858718, 97.69638057423464, 95.57160482879353, 97.7753247312042, 96.20617391270919, 98.6469450443644, 97.95481307967601, 99.20775213976738, 97.78488383880449, 99.95024409125953, 99.3108340497231, 97.7005656260867, 97.78563461151893, 95.97283114688004, 96.61067499078202, 98.73205826391951, 99.69807943147057, 99.13632587153158, 98.03235786858664, 98.70738879890907, 98.2636746756801, 98.58044745367037, 95.88057212491996, 98.33025647148055, 99.32195431581302, 96.37425640448689, 99.07215633700841, 96.00659228322405, 98.93485295557012, 98.7927129682115, 98.46640263055619, 96.12319699414446, 98.98119059650627, 98.18321672034732, 99.94222410462677, 99.86862152994364, 97.85588032742025, 96.88001437904872, 98.064873799695, 98.9941457298083, 97.374791506311, 97.71162493335898, 95.80694761674138, 99.52983561730261, 96.67780751134416, 96.08340848824685, 96.80823245067202, 97.42162738401133, 96.84731646227772, 97.11034922918634, 99.27290511769496, 99.91662108783818, 99.03110655979003, 96.06639608243903, 98.3124526918232, 99.4966274361773, 99.33452689483835, 98.69264188504624, 97.45231782169677, 99.48089340777369, 96.30018902428046, 99.86378550674418, 96.16142817056864, 98.4935276656161, 99.3379378748683, 95.60357209947003, 96.70862974180415, 96.03416850654526, 96.70107769936338, 97.34959457767071, 99.12670028864723]
c = [61.66764675563414, 44.97538502405919, 65.34466107201246, 45.43759521069447, 56.246604783116354, 62.371029866059075, 41.81197099999895, 54.12649269493549, 37.79226837852771, 60.41797177801382, 58.189215589975184, 57.2914946792057, 53.17923932994523, 42.42093566972523, 37.660632009602864, 34.6223375279683, 44.278111301949515, 38.24816180900227, 58.323902113058274, 38.376908028673824, 41.956461318678286, 37.23777398752754, 44.657470079071146, 35.45056377465419, 62.478256761305786, 50.28699213845348, 49.73568289782173, 53.04068372064842, 50.106510383626315, 39.18679324763037, 65.05629353430655, 64.3169866592325, 55.67117375441456, 44.35764694468123, 49.853212948091304, 39.63439885774153, 40.692251143380304, 53.976595277915465, 38.67069018135872, 49.718142327127396, 50.381307523264226, 58.08008210955018, 38.60384962665159, 39.76607341950742, 45.52836576983009, 50.93908031997731, 49.703829198394345, 38.793931041578176, 43.202020604187354, 43.05559337720271, 57.25215523817644, 41.114516041433944, 54.92171014917584, 60.29464760407565, 45.84428314097999, 59.758768776364846, 54.56523487410384, 43.51080586594051, 32.942220532296695, 62.43609186000076, 55.70273400548241, 39.78719205080597, 55.66723173132739, 31.69691775265182, 53.22499142291907, 47.11456958841406, 36.12424993914508, 34.801295563142766, 48.83454011138265, 57.96168864672703, 57.898342689194365, 38.67564518821332, 34.26344336931144, 34.65278660794466, 64.31786510660736, 46.9951852386121, 52.76004042929043, 33.44040323998164, 55.304674337964066, 63.307740800365686, 62.16569227221725, 31.64560928121651, 42.29240618659723, 34.68790037083132, 42.59966182648336, 58.64723535745956, 61.728892601999846, 61.553912777833986, 55.96134117449333, 39.069366784816, 62.0975859275689, 49.45093352816511, 46.479076223233236, 55.34150489090507, 45.796700792988354, 53.81717516136122, 61.04147951036484, 40.38797718083202, 45.02980725550977, 32.83560413082892]


plt.plot(range(1, len(s) + 1), s, label="storage")
plt.plot(range(1, len(c) + 1), c, label="compute")

# plt.xticks(range(1, len(x1) + 1), x_label1, rotation='vertical')

text_font = {'size': '9', 'weight': 'bold', 'color': 'black'}
plt.text(20, 15, "ARIMA predict result", fontdict=text_font, zorder=4)

plt.legend(loc='best', fontsize=8)  # 显示图例，即label

# plt.xticks(x, tick_label)  # 显示x坐标轴的标签,即tick_label,调整位置，使其落在两个直方图中间位置


# plt.xticks(x, tick_label)

# 防止坐标轴重叠
plt.tight_layout()
plt.show()
